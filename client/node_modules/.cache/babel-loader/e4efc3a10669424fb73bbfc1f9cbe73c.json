{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport \"./cart-dropdown.styles.scss\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\"; //import {selectCartItems} from \"../../redux/cart/cart.selector\"\n\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) =>\n/*#__PURE__*/\n//with mapsatetoprops we have access to dispatch method.\n//that is equivalennt to mapdispatchtoprops\nReact.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 15\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-cart\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 15\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}, \"Go to checkout\")); //used mapStatetoprops bcz we need the sate here.\n\n\nconst mapStateToProps = createStructuredSelector({\n  //using selector for this\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown));\n/* one way for checkout page routing\r\n<CustomButton >\r\n           <Link to = \"/checkout\">GO TO CHECKOUT</Link>\r\n           </CustomButton>*/","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","CustomButton","CartItem","createStructuredSelector","withRouter","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps","selectCartItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB,C,CACA;;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD;AAAA;AAAwC;AACD;AACxD;AAAK,EAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBACxB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAIA,QAAQ,CAACC,EAA1B;AAA8B,EAAA,IAAI,EAAID,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADE,CADH,gBAIC;AAAM,EAAA,SAAS,EAAG,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANN,CADJ,eAUQ,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAI,MAAM;AAC3BJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACDL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACF,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVR,CAFJ,C,CAsBC;;;AACD,MAAMU,eAAe,GAAGZ,wBAAwB,CAAC;AAAI;AACjDI,EAAAA,SAAS,EAAES;AADkC,CAAD,CAAhD;AAMA,eAAeZ,UAAU,CAACJ,OAAO,CAACe,eAAD,EAAkB,IAAlB,CAAP,CAA+BT,YAA/B,CAAD,CAAzB;AAEA","sourcesContent":["import React from \"react\"\r\nimport \"./cart-dropdown.styles.scss\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\"\r\nimport CartItem from \"../cart-item/cart-item.component\"\r\n//import {selectCartItems} from \"../../redux/cart/cart.selector\"\r\nimport {createStructuredSelector} from \"reselect\"\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\"\r\n\r\nconst CartDropdown = ({cartItems, history, dispatch}) => (   //with mapsatetoprops we have access to dispatch method.\r\n                                                            //that is equivalennt to mapdispatchtoprops\r\n    <div className = \"cart-dropdown\">\r\n        <div className = \"cart-items\">\r\n            {\r\n             cartItems.length ? \r\n                cartItems.map(cartItem => (\r\n              <CartItem key = {cartItem.id} item = {cartItem} />\r\n            ) ) \r\n            : <span className = 'empty-cart'>Your cart is empty</span>\r\n                }\r\n            </div>\r\n            <CustomButton onClick = {() => {\r\n                history.push(\"/checkout\")\r\n               dispatch(toggleCartHidden())  \r\n            }} >Go to checkout</CustomButton>\r\n           \r\n           \r\n           \r\n        \r\n    </div>\r\n)\r\n //used mapStatetoprops bcz we need the sate here.\r\nconst mapStateToProps = createStructuredSelector({   //using selector for this\r\n    cartItems: selectCartItems\r\n\r\n})\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown))\r\n\r\n/* one way for checkout page routing\r\n<CustomButton >\r\n           <Link to = \"/checkout\">GO TO CHECKOUT</Link>\r\n           </CustomButton>*/"]},"metadata":{},"sourceType":"module"}