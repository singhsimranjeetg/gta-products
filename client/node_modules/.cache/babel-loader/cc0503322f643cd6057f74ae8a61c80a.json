{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\components\\\\header\\\\header.component.jsx\";\nimport React from \"react\"; //import {Link} from \"react-router-dom\" not using this bcz its used in the header.styles.jsx\n\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\"; //import {auth} from \"../../firebase/firebase.utils\"\n\nimport { connect } from \"react-redux\";\nimport CartIcon from \"../cart-icon/cart-icon.component\";\nimport CartDropdown from \"../cart-dropdown/cart-dropdown.component\";\nimport { selectCartHidden } from \"../../redux/cart/cart.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { createStructuredSelector } from 'reselect';\nimport { LogoContainer, OptionLink, OptionsContainer, HeadereContainer } from \"./header.styles\";\nimport { signOutStart } from \"../../redux/user/users.actions\"; //import {clearEntireCart} from \"../../redux/cart/cart.actions\"\n\nconst Header = ({\n  currentUser,\n  hidden,\n  signOutStart\n}) => /*#__PURE__*/React.createElement(HeadereContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(LogoContainer, {\n  to: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Logo, {\n  className: \"logo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }\n})), /*#__PURE__*/React.createElement(OptionsContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(OptionLink, {\n  to: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }\n}, \"HOME\"), /*#__PURE__*/React.createElement(OptionLink, {\n  to: \"/shop\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n}, \"SHOP\"), /*#__PURE__*/React.createElement(OptionLink, {\n  to: \"/contact\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n}, \"CONTACT\"), //checking if there is object in currentUSer prop from app, then show sign out, if null then show sign in\ncurrentUser ? /*#__PURE__*/React.createElement(OptionLink, {\n  as: \"div\",\n  onClick: signOutStart,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 17\n  }\n}, \"SIGN OUT\") : /*#__PURE__*/React.createElement(OptionLink, {\n  to: \"/signin\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 20\n  }\n}, \"SIGN IN\"), /*#__PURE__*/React.createElement(CartIcon, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }\n})), hidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 27\n  }\n}));\n\nconst mapSateToProps = createStructuredSelector({\n  //state is the root reducer obj, top level and below we will set a property.\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden //we are pointing to root reducer,then user reducer, then currentuser propp\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart()) // clearAllCartItems: () => dispatch(clearAllCartItems())\n\n});\n\nexport default connect(mapSateToProps, mapDispatchToProps)(Header); //that null value set in the user reduccer will be passed in this \n//connect is also a higher oder comp. which get two arguements\n//means if hidden is true, dont show anything, but if fasle show the cartdropf=down\n//advance way to destructure, means form our parent state we need currentuser from user obj and hidden from the cart\n//oteher way to using few selectors\n\n/*\r\nconst mapSateToProps = (state) => ({    //state is the root reducer obj, top level and below we will set a property.\r\n    currentUser: selectCurrentUser(state),\r\n    hidden: selectCartHidden(state) //we are pointing to root reducer,then user reducer, then currentuser propp\r\n    \r\n})*/","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/components/header/header.component.jsx"],"names":["React","connect","CartIcon","CartDropdown","selectCartHidden","selectCurrentUser","createStructuredSelector","LogoContainer","OptionLink","OptionsContainer","HeadereContainer","signOutStart","Header","currentUser","hidden","mapSateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;qGAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,QAAgC,gCAAhC;AACA,SAAQC,iBAAR,QAAiC,iCAAjC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,aAAR,EAAuBC,UAAvB,EAAkCC,gBAAlC,EAAoDC,gBAApD,QAA2E,iBAA3E;AACA,SAAQC,YAAR,QAA2B,gCAA3B,C,CACA;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAeC,EAAAA,MAAf;AAAsBH,EAAAA;AAAtB,CAAD,kBACX,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,aAAD;AAAe,EAAA,EAAE,EAAG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADJ,eAMI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAG,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAII,oBAAC,UAAD;AAAa,EAAA,EAAE,EAAG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,eAOI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,EAUO;AACCE,WAAW,gBACX,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAG,KAAjB;AAAuB,EAAA,OAAO,EAAIF,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,gBAGR,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdX,eAgBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhBJ,CANJ,EAyBMG,MAAM,GAAG,IAAH,gBAAU,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAzBtB,CADJ;;AAgCA,MAAMC,cAAc,GAAIT,wBAAwB,CAAE;AAAG;AACjDO,EAAAA,WAAW,EAAER,iBADiC;AAE9CS,EAAAA,MAAM,EAAEV,gBAFsC,CAErB;;AAFqB,CAAF,CAAhD;;AAOA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCN,EAAAA,YAAY,EAAE,MAAMM,QAAQ,CAACN,YAAY,EAAb,CADQ,CAErC;;AAFqC,CAAL,CAAnC;;AAMA,eAAeV,OAAO,CAACc,cAAD,EAAiBC,kBAAjB,CAAP,CAA4CJ,MAA5C,CAAf,C,CAAsE;AAEtE;AACA;AACA;AAEA;;AACA","sourcesContent":["import React from \"react\"\r\n//import {Link} from \"react-router-dom\" not using this bcz its used in the header.styles.jsx\r\nimport {ReactComponent as Logo} from \"../../assets/crown.svg\"\r\n//import {auth} from \"../../firebase/firebase.utils\"\r\nimport {connect} from \"react-redux\"\r\nimport CartIcon from \"../cart-icon/cart-icon.component\"\r\nimport CartDropdown from \"../cart-dropdown/cart-dropdown.component\"\r\nimport {selectCartHidden } from \"../../redux/cart/cart.selector\"\r\nimport {selectCurrentUser } from \"../../redux/user/user.selectors\" \r\nimport {createStructuredSelector} from 'reselect'\r\nimport {LogoContainer, OptionLink,OptionsContainer, HeadereContainer} from \"./header.styles\"\r\nimport {signOutStart} from \"../../redux/user/users.actions\"\r\n//import {clearEntireCart} from \"../../redux/cart/cart.actions\"\r\n\r\n\r\n\r\nconst Header = ({currentUser , hidden,signOutStart}) => (\r\n    <HeadereContainer>\r\n        <LogoContainer to = \"/\"> \r\n         <Logo className = \"logo\" />\r\n         \r\n           </LogoContainer>\r\n\r\n        <OptionsContainer>\r\n\r\n            <OptionLink to = \"/\" >HOME</OptionLink>\r\n            \r\n            <OptionLink  to = \"/shop\">\r\n                SHOP\r\n            </OptionLink>\r\n            <OptionLink to = \"/contact\">\r\n                CONTACT\r\n            </OptionLink>\r\n            {  //checking if there is object in currentUSer prop from app, then show sign out, if null then show sign in\r\n                currentUser ?(\r\n                <OptionLink as = \"div\" onClick = {signOutStart}>SIGN OUT</OptionLink>)\r\n\r\n                :( <OptionLink to = \"/signin\">SIGN IN</OptionLink>)\r\n            }\r\n            <CartIcon />\r\n        </OptionsContainer>\r\n        {\r\n          hidden ? null : <CartDropdown />\r\n        }\r\n    </HeadereContainer>\r\n) \r\n\r\n\r\nconst mapSateToProps =  createStructuredSelector( {  //state is the root reducer obj, top level and below we will set a property.\r\n    currentUser: selectCurrentUser,\r\n    hidden: selectCartHidden //we are pointing to root reducer,then user reducer, then currentuser propp\r\n    \r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signOutStart: () => dispatch(signOutStart()),\r\n   // clearAllCartItems: () => dispatch(clearAllCartItems())\r\n})\r\n\r\n\r\nexport default connect(mapSateToProps, mapDispatchToProps)(Header)    //that null value set in the user reduccer will be passed in this \r\n\r\n//connect is also a higher oder comp. which get two arguements\r\n//means if hidden is true, dont show anything, but if fasle show the cartdropf=down\r\n//advance way to destructure, means form our parent state we need currentuser from user obj and hidden from the cart\r\n\r\n//oteher way to using few selectors\r\n/*\r\nconst mapSateToProps = (state) => ({    //state is the root reducer obj, top level and below we will set a property.\r\n    currentUser: selectCurrentUser(state),\r\n    hidden: selectCartHidden(state) //we are pointing to root reducer,then user reducer, then currentuser propp\r\n    \r\n})*/"]},"metadata":{},"sourceType":"module"}