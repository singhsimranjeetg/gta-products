{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\n//because we gonna store data for our collection items here, \n//we need state mathod, so we are using class component here.\nimport React from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage1 from \"../../components/collectionPage/collectionPage.component\"; //import SearchBox from \"../../components/search/search.component\"\n//import {firestore, convertCollectionsSnapshotToMap} from \"../../firebase/firebase.utils\"\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollctionFetching } from \"../../redux/shop/shop.selector\"; //import {updateCollections} from \"../../redux/shop/shop.actions\"\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPage1WithSpninner = WithSpinner(CollectionPage1); //class ShopPage extends React.Component{ dont need class component bcz no use of state here\n\nexport const ShopPage = ({\n  loading\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:categoryId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPage1WithSpninner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n};\n/*\r\nconst mapDispatchToProps = dispatch => ({\r\n   updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})*/\n\nconst mapStateToProps = createStructuredSelector({\n  loading: selectCollctionFetching\n});\nexport default connect(mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage1","connect","createStructuredSelector","selectCollctionFetching","WithSpinner","CollectionsOverviewWithSpinner","CollectionPage1WithSpninner","ShopPage","loading","match","path","props","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,0DAA5B,C,CACA;AAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,uBAAR,QAAsC,gCAAtC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,2BAA2B,GAAGF,WAAW,CAACJ,eAAD,CAA/C,C,CAKA;;AAEA,OAAO,MAAMO,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAEjC,sBACG;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAK,GAAEC,KAAK,CAACC,IAAK,EAAnC;AAAsC,IAAA,MAAM,EAAKC,KAAD,iBAC5C,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAIH;AAA7C,OAA0DG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAGG,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAK,GAAEF,KAAK,CAACC,IAAK,cAA7B;AAA4C,IAAA,MAAM,EAAKC,KAAD,iBAClD,oBAAC,2BAAD;AAA6B,MAAA,SAAS,EAAIH;AAA1C,OAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADH;AAOF,CATG;AAYP;;;;;AAKA,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAC5CM,EAAAA,OAAO,EAAGL;AADkC,CAAD,CAAhD;AAKC,eAAeF,OAAO,CAACY,kBAAD,CAAP,CAA6BN,QAA7B,CAAf","sourcesContent":["//because we gonna store data for our collection items here, \r\n//we need state mathod, so we are using class component here.\r\n\r\nimport React from \"react\"\r\nimport \"./shop.styles.scss\"\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\"\r\nimport { Route } from \"react-router-dom\"\r\nimport CollectionPage1 from \"../../components/collectionPage/collectionPage.component\"\r\n//import SearchBox from \"../../components/search/search.component\"\r\n\r\n//import {firestore, convertCollectionsSnapshotToMap} from \"../../firebase/firebase.utils\"\r\nimport {connect} from \"react-redux\"\r\nimport {createStructuredSelector} from 'reselect'\r\nimport {selectCollctionFetching} from \"../../redux/shop/shop.selector\"\r\n//import {updateCollections} from \"../../redux/shop/shop.actions\"\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\"\r\n\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionPage1WithSpninner = WithSpinner(CollectionPage1)\r\n\r\n\r\n\r\n\r\n//class ShopPage extends React.Component{ dont need class component bcz no use of state here\r\n\r\nexport const ShopPage = ({loading}) => {\r\n\r\n      return(     \r\n         <div className = \"shop-page\">\r\n            <Route exact path = {`${match.path}`} render = {(props) => (\r\n                <CollectionsOverviewWithSpinner isLoading = {loading} {...props} />)} />\r\n            <Route path = {`${match.path}/:categoryId`} render = {(props) => (\r\n                <CollectionPage1WithSpninner isLoading = {loading} {...props} /> )}/>      \r\n         </div> )\r\n   }\r\n\r\n \r\n/*\r\nconst mapDispatchToProps = dispatch => ({\r\n   updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})*/\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n     loading : selectCollctionFetching\r\n\r\n})\r\n\r\n export default connect(mapDispatchToProps) (ShopPage)\r\n"]},"metadata":{},"sourceType":"module"}