{"ast":null,"code":"export const addItemsToCart = (cartItems, cartItemsToAdd) => {\n  //gonaa look in cart items array to see if cartItemstoadd already exists\n  //cartItem to add is our actoin payload for the cart rreducer\n  const existingCartItems = cartItems.find( //it will return the first cartItems whose id matches the id of cartitem we wanna add\n  cartItems => cartItems.id === cartItemsToAdd.id //if true it will set that item to the existingcartitem const, it not found it will be undefined\n  ); //if there is item already exists in the cartItems then increase its quantity by one\n\n  if (existingCartItems) {\n    //if that iten already exists in cartItems\n    return cartItems.map(cartItem => //map will return us new array and we need that in order to make comp render properly\n    cartItem.id === cartItemsToAdd.id //if that cartItemtoadd exisits\n    ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } //if that item doesnt exists, we wanna add that to a new array which also has new item.\n\n\n  return [...cartItems, { ...cartItemsToAdd,\n    quantity: 1\n  }]; //i think we are setting the quantity prop of cartItems to 1\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); //will return which are already in cart\n  //dont want to remove item if with left arrow \n\n  /*\r\n  if(existingCartItem.quantity === 1){\r\n      return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n  }*/\n\n  if (existingCartItem.quantity === 1) {\n    //\n    return cartItems.map(cartItem => cartItem);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/redux/cart/cart.utils.js"],"names":["addItemsToCart","cartItems","cartItemsToAdd","existingCartItems","find","id","map","cartItem","quantity","removeItemFromCart","cartItemToRemove","existingCartItem"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AAAK;AAClE;AACI,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,IAAV,EAAoB;AAC1CH,EAAAA,SAAS,IAAIA,SAAS,CAACI,EAAV,KAAiBH,cAAc,CAACG,EADvB,CAC6B;AAD7B,GAA1B,CAFyD,CAK7D;;AACI,MAAIF,iBAAJ,EAAsB;AAAG;AACrB,WAAOF,SAAS,CAACK,GAAV,CAAcC,QAAQ,IAAW;AACpCA,IAAAA,QAAQ,CAACF,EAAT,KAAgBH,cAAc,CAACG,EAA/B,CAAoC;AAApC,MACG,EAAC,GAAGE,QAAJ;AAAcC,MAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AAA5C,KADH,GAGAD,QAJG,CAAP;AAOH,GAdwD,CAcvD;;;AACF,SAAO,CAAC,GAAGN,SAAJ,EAAe,EAAC,GAAGC,cAAJ;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP,CAfyD,CAeA;AAE5D,CAjBM;AAmBN,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAChE,QAAMC,gBAAgB,GAAGV,SAAS,CAACG,IAAV,CAAgBG,QAAQ,IAChDA,QAAQ,CAACF,EAAT,KAAgBK,gBAAgB,CAACL,EADT,CAAzB,CADgE,CAEzB;AAEtC;;AACL;;;;;AAKA,MAAGM,gBAAgB,CAACH,QAAjB,KAA8B,CAAjC,EAAmC;AAAK;AACpC,WAAOP,SAAS,CAACK,GAAV,CAAcC,QAAQ,IAAIA,QAA1B,CAAP;AACH;;AAED,SAAON,SAAS,CAACK,GAAV,CAAcC,QAAQ,IACzBA,QAAQ,CAACF,EAAT,KAAeK,gBAAgB,CAACL,EAAhC,GACE,EAAC,GAAGE,QAAJ;AAAcC,IAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAmB;AAA3C,GADF,GAEED,QAHC,CAAP;AAKC,CAnBO","sourcesContent":["\r\n\r\nexport const addItemsToCart = (cartItems, cartItemsToAdd) => {    //gonaa look in cart items array to see if cartItemstoadd already exists\r\n//cartItem to add is our actoin payload for the cart rreducer\r\n    const existingCartItems = cartItems.find(     //it will return the first cartItems whose id matches the id of cartitem we wanna add\r\n        cartItems => cartItems.id === cartItemsToAdd.id    //if true it will set that item to the existingcartitem const, it not found it will be undefined\r\n    )\r\n//if there is item already exists in the cartItems then increase its quantity by one\r\n    if (existingCartItems){  //if that iten already exists in cartItems\r\n        return cartItems.map(cartItem =>        //map will return us new array and we need that in order to make comp render properly\r\n            cartItem.id === cartItemsToAdd.id   //if that cartItemtoadd exisits\r\n            ? ({...cartItem, quantity: cartItem.quantity + 1})\r\n            :\r\n            cartItem\r\n            )          \r\n\r\n    } //if that item doesnt exists, we wanna add that to a new array which also has new item.\r\n    return [...cartItems, {...cartItemsToAdd, quantity: 1}]  //i think we are setting the quantity prop of cartItems to 1\r\n\r\n}\r\n\r\n export const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const existingCartItem = cartItems.find( cartItem => \r\n     cartItem.id === cartItemToRemove.id)  //will return which are already in cart\r\n\r\n     //dont want to remove item if with left arrow \r\n/*\r\nif(existingCartItem.quantity === 1){\r\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n}*/   \r\n\r\nif(existingCartItem.quantity === 1){    //\r\n    return cartItems.map(cartItem => cartItem)\r\n}\r\n\r\nreturn cartItems.map(cartItem =>\r\n    cartItem.id ===cartItemToRemove.id \r\n    ? {...cartItem, quantity: cartItem.quantity -1}\r\n    : cartItem\r\n)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}