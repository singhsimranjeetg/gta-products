{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\App.js\";\nimport React from 'react';\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport './App.css';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Checkout from \"./pages/checkout/checkoutpage/checkout.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from \"./firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"./redux/user/users.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport ContactPage from './pages/contactPage/contactPage.component';\nimport { selectCollectionsForPreview } from \"./redux/shop/shop.selector\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    //telling to whenever a auth change, update the state of app comp\n    const {\n      setCurrentUser,\n      collectionsArray\n    } = this.props;\n    this.unSubscribeFromAuth = auth.onAuthStateChanged(async UsersAuth => {\n      //this UserAuth objects that get passed to createuserprofile fx in the firebase utils\n      //console.log(UsersAuth) // this userAuth returns null if sign out and if sign in returns an auth object with display name email etc.\n      if (UsersAuth) {\n        const userRef = await createUserProfileDocument(UsersAuth); //passing the user object with Uid to this fx \n\n        userRef.onSnapshot(snapShot => {\n          //console.log(snapShot.data()) this returns the collections obj(like display name) for that particualar user doc, but snapshot just rerurn the obj\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          }); //console.log(setCurrentUser(UsersAuth)) this will start an action type as set current user and payload as big userAuth obj that has all the prop of signed in user\n        });\n      }\n\n      setCurrentUser(UsersAuth); //this will set currentuser to null if there is not Userauth, means no user signed in\n\n      addCollectionAndDocuments(\"collections\", collectionsArray.map(({\n        title,\n        items\n      }) => ({\n        title,\n        items\n      })));\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribeFromAuth();\n  }\n\n  render() {\n    // doesnt work-  const {currentUser} = this.state    <h2>Welcome to {this.state.currentUser.DisplayNam}</h2>\n    return (\n      /*#__PURE__*/\n      //using reducer to pass the props in the header comp\n      React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, \"GTA PRODUCTS \"), /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/checkout\",\n        component: Checkout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: HomePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/shop\",\n        component: ShopPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/contact\",\n        component: ContactPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 34\n          }\n        }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }\n      })))\n    );\n  }\n\n} //we are passing a user obj to the setscuurent user action, dispatch is a way for redux to know whatever obj we are passing\n//will be a action obj and will be passed to all the reducers.\n//the setcurrent user is a fx and we are passsing a obj as a arguement which will be the payload for that.\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  collectionsArray: selectCollectionsForPreview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)) //we will passs the user to the reducer action  \n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //first arguement is null bcz we dont need the currentuser prop here in the app comp\n//Route comp takes three attributes, exact means only that path(which exactly maches the path name), path is the url and component is name of the component\n//switch comp only lets run the base url nothing else, but when use exact it only renders the hatspage even with the switch\n//we are placing our header comp out of the swich bz, no matter what switch and route display, header comp will be there for all urls\n//the auth method of firebase keeps the user logged in untill they sign out,\n//unlike express app which required the use of sessions to do so  \n//async fx for createUser bcz its waiting for a query from the db\n//logger tells us the state of the our redux when any action gets fired\n//the prev state is the state before action was fired and second is the \n//action itself and third is the state after the action has modified \n//any of our reducers","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/App.js"],"names":["React","HomePage","Switch","Route","Redirect","ShopPage","Checkout","Header","SignInAndSignUpPage","auth","createUserProfileDocument","addCollectionAndDocuments","connect","setCurrentUser","selectCurrentUser","createStructuredSelector","ContactPage","selectCollectionsForPreview","App","Component","unSubscribeFromAuth","componentDidMount","collectionsArray","props","onAuthStateChanged","UsersAuth","userRef","onSnapshot","snapShot","id","data","map","title","items","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HomePage from \"./pages/homepage/homepage.component\"\r\nimport './App.css';\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport ShopPage from \"./pages/shop/shop.component\"\r\nimport Checkout from \"./pages/checkout/checkoutpage/checkout.component\"\r\n\r\nimport Header from  \"./components/header/header.component\"\r\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\"\r\nimport {auth, createUserProfileDocument, addCollectionAndDocuments} from \"./firebase/firebase.utils\"\r\nimport {connect} from \"react-redux\"\r\nimport {setCurrentUser} from \"./redux/user/users.actions\"\r\nimport {selectCurrentUser} from \"./redux/user/user.selectors\"\r\nimport {createStructuredSelector} from \"reselect\"\r\nimport ContactPage from './pages/contactPage/contactPage.component';\r\n\r\nimport {selectCollectionsForPreview } from \"./redux/shop/shop.selector\"\r\n\r\n\r\nclass App extends React.Component { \r\n  /*constructor(){\r\n    super()\r\n\r\n    this.state = {\r\n      currentUser: null\r\n    }\r\nwe dont need the constructor bcz we are passing the state as user obj to the reducer\r\n  }*/ \r\n\r\n    unSubscribeFromAuth = null\r\n\r\n\r\n   componentDidMount(){   //telling to whenever a auth change, update the state of app comp\r\n\r\n    const {setCurrentUser, collectionsArray} = this.props\r\n    this.unSubscribeFromAuth = auth.onAuthStateChanged(async UsersAuth => {     //this UserAuth objects that get passed to createuserprofile fx in the firebase utils\r\n     //console.log(UsersAuth) // this userAuth returns null if sign out and if sign in returns an auth object with display name email etc.\r\n       if(UsersAuth){\r\n      const userRef = await createUserProfileDocument(UsersAuth)//passing the user object with Uid to this fx \r\n\r\n       userRef.onSnapshot(snapShot => {\r\n        //console.log(snapShot.data()) this returns the collections obj(like display name) for that particualar user doc, but snapshot just rerurn the obj\r\n         setCurrentUser({\r\n           id: snapShot.id,\r\n           ...snapShot.data()\r\n           \r\n         })\r\n  //console.log(setCurrentUser(UsersAuth)) this will start an action type as set current user and payload as big userAuth obj that has all the prop of signed in user\r\n      })\r\n      \r\n\r\n       }\r\n       \r\n         setCurrentUser(UsersAuth)  //this will set currentuser to null if there is not Userauth, means no user signed in\r\n         addCollectionAndDocuments(\"collections\",collectionsArray.map(({title, items}) => ({title, items}) ))\r\n      \r\n    \r\n       \r\n     })\r\n   }\r\n    componentWillUnmount(){\r\n      this.unSubscribeFromAuth()\r\n    }\r\n   render() {\r\n    // doesnt work-  const {currentUser} = this.state    <h2>Welcome to {this.state.currentUser.DisplayNam}</h2>\r\n   return (  \r\n   //using reducer to pass the props in the header comp\r\n    <div className=\"App\">\r\n      <Header  />     \r\n    \r\n      <h4>GTA PRODUCTS </h4>\r\n    \r\n      <Switch>\r\n      <Route  path = \"/checkout\" component = {Checkout} />\r\n      <Route exact  path = \"/\" component = {HomePage}  />\r\n     <Route path = \"/shop\" component = {ShopPage} />\r\n     <Route path = \"/contact\" component = {ContactPage} />\r\n     \r\n     <Route exact path = \"/signin\" render = {() =>\r\n       this.props.currentUser ? (<Redirect to = \"/\"/>) \r\n       : (<SignInAndSignUpPage />) }/>\r\n      </Switch>\r\n      \r\n    </div>\r\n  );  \r\n}  \r\n}\r\n    //we are passing a user obj to the setscuurent user action, dispatch is a way for redux to know whatever obj we are passing\r\n  //will be a action obj and will be passed to all the reducers.\r\n  //the setcurrent user is a fx and we are passsing a obj as a arguement which will be the payload for that.\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n  collectionsArray: selectCollectionsForPreview\r\n\r\n})\r\n  \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))    //we will passs the user to the reducer action  \r\n})\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps )(App)    //first arguement is null bcz we dont need the currentuser prop here in the app comp\r\n\r\n\r\n\r\n//Route comp takes three attributes, exact means only that path(which exactly maches the path name), path is the url and component is name of the component\r\n //switch comp only lets run the base url nothing else, but when use exact it only renders the hatspage even with the switch\r\n //we are placing our header comp out of the swich bz, no matter what switch and route display, header comp will be there for all urls\r\n  //the auth method of firebase keeps the user logged in untill they sign out,\r\n     //unlike express app which required the use of sessions to do so  \r\n     //async fx for createUser bcz its waiting for a query from the db\r\n\r\n     //logger tells us the state of the our redux when any action gets fired\r\n     //the prev state is the state before action was fired and second is the \r\n     //action itself and third is the state after the action has modified \r\n     //any of our reducers\r\n"]},"metadata":{},"sourceType":"module"}