{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from \"react\";\nimport \"./sign-in.styles.scss\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, SignInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { googleSignInStart } from \"../../redux/user/users.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      //didn't get why this method defined outside the construcotr and has obj destructuring \n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleChange = event => {\n      googleSignInStart();\n      /*\r\n      \r\n      const {value, name} = event.target\r\n      this.setState({[name]: value})*/\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      value: this.state.email,\n      type: \"email\",\n      handleChange: this.handleChange,\n      autoComplete: \"on\",\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      autoComplete: \"off\",\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: SignInWithGoogle,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"SIGN IN WITH GOOGLE\")))); //used onClick mehtod to call signinwithgoogle fx from other folder\n  } //used </CustomButton> bcz wanna use the children prop of that in custom button comp.\n\n\n} //so by default isgooglesignin will pass the true value to the custom button\n\n\nconst mapDispatchToProps = dispatch => {\n  googleSignInStart: dispatch(googleSignInStart());\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","SignInWithGoogle","googleSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","err","console","log","handleChange","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport \"./sign-in.styles.scss\"\r\nimport FormInput from \"../form-input/form-input.component\"\r\nimport CustomButton from \"../custom-button/custom-button.component\"\r\nimport {auth,SignInWithGoogle} from \"../../firebase/firebase.utils\"\r\n\r\nimport {googleSignInStart} from \"../../redux/user/users.actions\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n    }\r\n     handleSubmit = async event => {   //didn't get why this method defined outside the construcotr and has obj destructuring \r\n        event.preventDefault()\r\n\r\n       const {email, password} = this.state\r\n\r\n       try{\r\n           await auth.signInWithEmailAndPassword(email,password)\r\n           this.setState({email: \"\" , password: \"\"})\r\n\r\n\r\n       }\r\n       catch(err) {\r\n           console.log(err)\r\n\r\n       }  \r\n        \r\n     }\r\n\r\n     handleChange = event => {\r\n         googleSignInStart()\r\n         /*\r\n         \r\n         const {value, name} = event.target\r\n         this.setState({[name]: value})*/\r\n     }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className = \"sign-in\">\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <FormInput name = \"email\"\r\n                     value ={this.state.email} \r\n                     type=\"email\" \r\n                     handleChange = {this.handleChange}\r\n                     autoComplete = \"on\"\r\n                     label = 'Email'\r\n                      required />\r\n                    \r\n\r\n\r\n                    <FormInput type=\"password\"\r\n                     name = \"password\" \r\n                     value = {this.state.password} \r\n                     autoComplete = \"off\"\r\n                     handleChange = {this.handleChange}\r\n                     label = \"Password\"\r\n                      required />\r\n    \r\n                    <div className = \"buttons\">\r\n                    <CustomButton type=\"submit\" >SIGN IN\r\n                        </CustomButton>\r\n                    <CustomButton onClick = {SignInWithGoogle} isGoogleSignIn  >SIGN IN WITH GOOGLE\r\n                        </CustomButton>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        )//used onClick mehtod to call signinwithgoogle fx from other folder\r\n    }  //used </CustomButton> bcz wanna use the children prop of that in custom button comp.\r\n}  //so by default isgooglesignin will pass the true value to the custom button\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    googleSignInStart: dispatch(googleSignInStart())\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}