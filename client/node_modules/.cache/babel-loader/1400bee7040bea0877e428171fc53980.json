{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\"; //midleware fx after actions and before reducers, good foe ddebugging\n\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\"; //import thunk from \"redux-thunk\"\n\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"../redux/shop/shop.saga\";\nconst sagaMiddleware = createSagaMiddleware(); //can take an obj with some conf. setting, but we dont need\n\nconst middlewares = [logger, sagaMiddleware]; //we might pass only the logger to the applymiddle but as it can take multiple\n//parameters, we wanna spead all other obj we may add later on in the middlewares array\n//we will enable this if we dont want logger to show up in production\n\n/*\r\nif(process.env.NODE_ENV === \"development\"){\r\n    middlewares.push(logger)\r\n} //can also be test,production\r\n*/\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart); //creating the persisted version of our store.\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n}; //we will pass this to the provider in the index.js file.","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleware","fetchCollectionsStart","sagaMiddleware","middlewares","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAmC;;AACnC,SAAQC,YAAR,QAA2B,eAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,qBAAR,QAAoC,yBAApC;AAEA,MAAMC,cAAc,GAAEF,oBAAoB,EAA1C,C,CAA6C;;AAC7C,MAAMG,WAAW,GAAG,CAACN,MAAD,EAAQK,cAAR,CAApB,C,CAA4C;AAC5C;AAGA;;AACC;;;;;;AAQD,OAAO,MAAME,KAAK,GAAGT,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACG,GAAf,CAAmBJ,qBAAnB,E,CACA;;AACA,OAAO,MAAMK,SAAS,GAAIR,YAAY,CAACM,KAAD,CAA/B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf,C,CAAmC","sourcesContent":["import {createStore, applyMiddleware} from \"redux\"\r\nimport logger from \"redux-logger\"  //midleware fx after actions and before reducers, good foe ddebugging\r\nimport {persistStore} from \"redux-persist\"\r\n\r\nimport rootReducer from \"./root-reducer\"\r\n//import thunk from \"redux-thunk\"\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport {fetchCollectionsStart} from \"../redux/shop/shop.saga\"\r\n\r\nconst sagaMiddleware =createSagaMiddleware() //can take an obj with some conf. setting, but we dont need\r\nconst middlewares = [logger,sagaMiddleware] //we might pass only the logger to the applymiddle but as it can take multiple\r\n//parameters, we wanna spead all other obj we may add later on in the middlewares array\r\n\r\n\r\n//we will enable this if we dont want logger to show up in production\r\n /*\r\n if(process.env.NODE_ENV === \"development\"){\r\n     middlewares.push(logger)\r\n } //can also be test,production\r\n*/\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(fetchCollectionsStart)\r\n//creating the persisted version of our store.\r\nexport const persistor =  persistStore(store)\r\n\r\nexport default {store, persistor}  //we will pass this to the provider in the index.js file.\r\n "]},"metadata":{},"sourceType":"module"}