{"ast":null,"code":"import { createSelector } from \"reselect\";\nexport const selectshop = state => state.shop;\nexport const selectCollections = createSelector([selectshop], shop => shop.collections); //Keys does is it gets us all of the keys of an object that we pass into it and gives it to us in an array format\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collection => collection ? Object.keys(collection).map(key => collection[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections1 => collections1 ? collections1[collectionUrlParam] : null);\nexport const selectCollctionFetching = createSelector([selectshop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectshop], shop => !!shop.collections //if collection stores an object, return true, if null false\n); //using !!null will return us false.\n// but !!object will return true.","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/client/src/redux/shop/shop.selector.js"],"names":["createSelector","selectshop","state","shop","selectCollections","collections","selectCollectionsForPreview","collection","Object","keys","map","key","selectCollection","collectionUrlParam","collections1","selectCollctionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AAEA,OAAO,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;AAEP,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC,C,CAIN;;AACD,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErDG,UAAU,IAAIA,UAAU,GAAIC,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBG,GAAxB,CAA4BC,GAAG,IAAIJ,UAAU,CAACI,GAAD,CAA7C,CAAJ,GAA2D,EAF9B,CAAlD;AAMP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAClDb,cAAc,CACV,CAACI,iBAAD,CADU,EAEVU,YAAY,IAAIA,YAAY,GAAGA,YAAY,CAACD,kBAAD,CAAf,GAAsC,IAFxD,CADP;AAMP,OAAO,MAAME,uBAAuB,GAAGf,cAAc,CACjD,CAACC,UAAD,CADiD,EAEjDE,IAAI,IAAIA,IAAI,CAACa,UAFoC,CAA9C;AAKP,OAAO,MAAMC,yBAAyB,GAAGjB,cAAc,CACnD,CAACC,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFoC,CAEvB;AAFuB,CAAhD,C,CAIP;AACA","sourcesContent":["import {createSelector} from \"reselect\"\r\n\r\nexport const selectshop = state => state.shop\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectshop],\r\n    shop => shop.collections\r\n)\r\n //Keys does is it gets us all of the keys of an object that we pass into it and gives it to us in an array format\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections], \r\n    collection => collection ?  Object.keys(collection).map(key => collection[key] ) : []\r\n    \r\n)\r\n\r\nexport const selectCollection = collectionUrlParam => \r\ncreateSelector(\r\n    [selectCollections],\r\n    collections1 => collections1 ? collections1[collectionUrlParam] : null\r\n);\r\n\r\nexport const selectCollctionFetching = createSelector(\r\n    [selectshop],\r\n    shop => shop.isFetching\r\n)\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectshop],\r\n    shop => !!shop.collections  //if collection stores an object, return true, if null false\r\n)\r\n//using !!null will return us false.\r\n// but !!object will return true."]},"metadata":{},"sourceType":"module"}