{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\n//because we gonna store data for our collection items here, \n//we need state mathod, so we are using class component here.\nimport React from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage1 from \"../../components/collectionPage/collectionPage.component\"; //import SearchBox from \"../../components/search/search.component\"\n//import {firestore, convertCollectionsSnapshotToMap} from \"../../firebase/firebase.utils\"\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollctionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\"; //import {updateCollections} from \"../../redux/shop/shop.actions\"\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPage1WithSpninner = WithSpinner(CollectionPage1); //class ShopPage extends React.Component{ dont need class component bcz no use of state here\n\nexport class ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      loading,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPage1WithSpninner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    })); //if collection is null, selector will pass false, but we will pass true to withspinner here\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  loading: selectCollctionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage1","connect","createStructuredSelector","selectCollctionFetching","selectIsCollectionsLoaded","fetchCollectionsStartAsync","WithSpinner","CollectionsOverviewWithSpinner","CollectionPage1WithSpninner","ShopPage","Component","componentDidMount","props","render","match","loading","isCollectionsLoaded","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,0DAA5B,C,CACA;AACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,uBAAR,EAAiCC,yBAAjC,QAAiE,gCAAjE;AACA,SAAQC,0BAAR,QAAyC,+BAAzC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACR,mBAAD,CAAlD;AACA,MAAMU,2BAA2B,GAAGF,WAAW,CAACN,eAAD,CAA/C,C,CAKA;;AAEA,OAAO,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAwC;AAE5CC,EAAAA,iBAAiB,GAAE;AAChB,UAAM;AAACN,MAAAA;AAAD,QAA+B,KAAKO,KAA1C;AACAP,IAAAA,0BAA0B;AAC5B;;AACDQ,EAAAA,MAAM,GAAG;AACN,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAwC,KAAKJ,KAAnD;AACA,wBACG;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACG,IAAK,EAAnC;AAAsC,MAAA,MAAM,EAAKL,KAAD,iBAC5C,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAIG;AAA7C,SAA0DH,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAGG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACG,IAAK,cAA7B;AAA4C,MAAA,MAAM,EAAKL,KAAD,iBAClD,oBAAC,2BAAD;AAA6B,QAAA,SAAS,EAAI,CAACI;AAA3C,SAAqEJ,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADH,CAFM,CAQO;AACf;;AAf2C;;AAoB/C,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACrCd,EAAAA,0BAA0B,EAAG,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,MAAMe,eAAe,GAAGlB,wBAAwB,CAAC;AAC5Ca,EAAAA,OAAO,EAAGZ,uBADkC;AAE5Ca,EAAAA,mBAAmB,EAAGZ;AAFsB,CAAD,CAAhD;AAMC,eAAeH,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA8CT,QAA9C,CAAf","sourcesContent":["//because we gonna store data for our collection items here, \r\n//we need state mathod, so we are using class component here.\r\n\r\nimport React from \"react\"\r\nimport \"./shop.styles.scss\"\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\"\r\nimport { Route } from \"react-router-dom\"\r\nimport CollectionPage1 from \"../../components/collectionPage/collectionPage.component\"\r\n//import SearchBox from \"../../components/search/search.component\"\r\n//import {firestore, convertCollectionsSnapshotToMap} from \"../../firebase/firebase.utils\"\r\nimport {connect} from \"react-redux\"\r\nimport {createStructuredSelector} from 'reselect'\r\nimport {selectCollctionFetching, selectIsCollectionsLoaded} from \"../../redux/shop/shop.selector\"\r\nimport {fetchCollectionsStartAsync} from \"../../redux/shop/shop.actions\"\r\n//import {updateCollections} from \"../../redux/shop/shop.actions\"\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\"\r\n\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionPage1WithSpninner = WithSpinner(CollectionPage1)\r\n\r\n\r\n\r\n\r\n//class ShopPage extends React.Component{ dont need class component bcz no use of state here\r\n\r\nexport class ShopPage extends React.Component  {\r\n\r\n   componentDidMount(){\r\n      const {fetchCollectionsStartAsync} = this.props\r\n      fetchCollectionsStartAsync()\r\n   }\r\n   render() {\r\n      const {match, loading, isCollectionsLoaded} = this.props\r\n      return(     \r\n         <div className = \"shop-page\">\r\n            <Route exact path = {`${match.path}`} render = {(props) => (\r\n                <CollectionsOverviewWithSpinner isLoading = {loading} {...props} />)} />\r\n            <Route path = {`${match.path}/:categoryId`} render = {(props) => (\r\n                <CollectionPage1WithSpninner isLoading = {!isCollectionsLoaded}  {...props} /> )}/>      \r\n         </div> )  //if collection is null, selector will pass false, but we will pass true to withspinner here\r\n   } \r\n}\r\n\r\n \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   fetchCollectionsStartAsync : () => dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n     loading : selectCollctionFetching,\r\n     isCollectionsLoaded : selectIsCollectionsLoaded\r\n\r\n})\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps) (ShopPage)\r\n"]},"metadata":{},"sourceType":"module"}