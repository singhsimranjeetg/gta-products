{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport \"./sign-in.styles.scss\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\"; //import {auth} from \"../../firebase/firebase.utils\"\n\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/users.actions\";\nimport { connect } from \"react-redux\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const {\n    userCredentials,\n    setCredentials\n  } = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  this.handleSubmit = event => {\n    //didn't get why this method defined outside the construcotr and has obj destructuring \n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  this.handleChange = event => {\n    /* const {googleSignInStarti} = this.props\r\n     googleSignInStarti()\r\n     */\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    value: email,\n    type: \"email\",\n    handleChange: handleChange,\n    autoComplete: \"on\",\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    autoComplete: \"off\",\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"SIGN IN WITH GOOGLE\")))) //in case of cus\n  ; //used onClick mehtod to call signinwithgoogle fx from other folder\n}; //used </CustomButton> bcz wanna use the children prop of that in custom button comp.\n//so by default isgooglesignin will pass the true value to the custom button\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n/*   this code before using saga.\r\n       try{\r\n           await auth.signInWithEmailAndPassword(email,password)\r\n           this.setState({email: \"\" , password: \"\"})\r\n\r\n\r\n       }\r\n       catch(err) {\r\n           console.log(err)\r\n\r\n       }  */","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport \"./sign-in.styles.scss\"\r\nimport FormInput from \"../form-input/form-input.component\"\r\nimport CustomButton from \"../custom-button/custom-button.component\"\r\n//import {auth} from \"../../firebase/firebase.utils\"\r\n\r\n\r\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/users.actions\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\n\r\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\r\n    const {userCredentials, setCredentials } = useState({email: \"\", password: \"\"})\r\n  \r\n\r\n\r\n    const {email, password} = userCredentials\r\n\r\n     this.handleSubmit = event => {   //didn't get why this method defined outside the construcotr and has obj destructuring \r\n      event.preventDefault()     \r\n      emailSignInStart(email,password) \r\n      }\r\n   \r\n\r\n     this.handleChange = (event) => {\r\n        /* const {googleSignInStarti} = this.props\r\n         googleSignInStarti()\r\n         */\r\n         \r\n         const {value, name} = event.target\r\n         setCredentials({...userCredentials, [name]: value})\r\n     }\r\n\r\n        return (\r\n            <div className = \"sign-in\">\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit = {handleSubmit}>\r\n                    <FormInput\r\n                     name = \"email\"\r\n                     value ={email} \r\n                     type=\"email\" \r\n                     handleChange = {handleChange}\r\n                     autoComplete = \"on\"\r\n                     label = 'Email'\r\n                      required />\r\n                    \r\n\r\n\r\n                    <FormInput type=\"password\"\r\n                     name = \"password\" \r\n                     value = {password} \r\n                     autoComplete = \"off\"\r\n                     handleChange = {handleChange}\r\n                     label = \"Password\"\r\n                      required />\r\n    \r\n                    <div className = \"buttons\">\r\n                    <CustomButton type=\"submit\" >SIGN IN \r\n                        </CustomButton>\r\n                    <CustomButton type = \"button\" onClick = {googleSignInStart} isGoogleSignIn  >SIGN IN WITH GOOGLE\r\n                        </CustomButton>\r\n                    </div>\r\n                \r\n                </form>\r\n            </div>\r\n            //in case of cus\r\n        )//used onClick mehtod to call signinwithgoogle fx from other folder\r\n    }  //used </CustomButton> bcz wanna use the children prop of that in custom button comp.\r\n  //so by default isgooglesignin will pass the true value to the custom button\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email,password) => dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)\r\n\r\n/*   this code before using saga.\r\n       try{\r\n           await auth.signInWithEmailAndPassword(email,password)\r\n           this.setState({email: \"\" , password: \"\"})\r\n\r\n\r\n       }\r\n       catch(err) {\r\n           console.log(err)\r\n\r\n       }  */"]},"metadata":{},"sourceType":"module"}