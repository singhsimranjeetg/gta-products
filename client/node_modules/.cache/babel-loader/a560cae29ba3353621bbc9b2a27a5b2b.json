{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\n//because we gonna store data for our collection items here, \n//we need state mathod, so we are using class component here.\nimport React from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage1 from \"../../components/collectionPage/collectionPage.component\"; //import SearchBox from \"../../components/search/search.component\"\n\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\"; //class ShopPage extends React.Component{ dont need class component bcz no use of state here\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collecctionRef = firestore.collection(\"collections\"); //console.log(collecctionRef)\n\n    collecctionRef.onSnapshot(async snapshot => {\n      //onSnapShot tells whenever our collectionRef changes or comp renders for the first time, we want to get the data of collections\n      //console.log(snapshot)\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); //console.log(collectionsMap)\n\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      component: CollectionPage1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage1","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","collecctionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,0DAA5B,C,CACA;;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC,C,CAGA;;AACA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,uBAFqC,GAEX,IAFW;AAAA;;AAIrCC,EAAAA,iBAAiB,GAAE;AAChB,UAAM;AAACJ,MAAAA;AAAD,QAAsB,KAAKK,KAAjC;AACA,UAAMC,cAAc,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAvB,CAFgB,CAGhB;;AAEAD,IAAAA,cAAc,CAACE,UAAf,CAA0B,MAAMC,QAAN,IAAkB;AAAE;AAC3C;AACF,YAAMC,cAAc,GAAIZ,+BAA+B,CAACW,QAAD,CAAvD,CAF2C,CAG3C;;AACAT,MAAAA,iBAAiB,CAACU,cAAD,CAAjB;AACA,KALD;AAMF;;AACAC,EAAAA,MAAM,GAAI;AACN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AAED,wBACG;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEO,KAAK,CAACC,IAAK,EAAnC;AAAsC,MAAA,SAAS,EAAEnB,mBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAK,GAAEkB,KAAK,CAACC,IAAK,cAA7B;AAA4C,MAAA,SAAS,EAAIjB,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADH;AAKF;;AAxBmC;;AA4BvC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACrCf,EAAAA,iBAAiB,EAAGU,cAAc,IAAIK,QAAQ,CAACf,iBAAiB,CAACU,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIC,eAAeX,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAmCb,QAAnC,CAAf","sourcesContent":["//because we gonna store data for our collection items here, \r\n//we need state mathod, so we are using class component here.\r\n\r\nimport React from \"react\"\r\nimport \"./shop.styles.scss\"\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\"\r\nimport { Route } from \"react-router-dom\"\r\nimport CollectionPage1 from \"../../components/collectionPage/collectionPage.component\"\r\n//import SearchBox from \"../../components/search/search.component\"\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap} from \"../../firebase/firebase.utils\"\r\nimport {connect} from \"react-redux\"\r\nimport {updateCollections} from \"../../redux/shop/shop.actions\"\r\n\r\n\r\n//class ShopPage extends React.Component{ dont need class component bcz no use of state here\r\nclass ShopPage extends React.Component {\r\n \r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount(){\r\n     const {updateCollections} = this.props\r\n     const collecctionRef = firestore.collection(\"collections\")\r\n     //console.log(collecctionRef)\r\n     \r\n     collecctionRef.onSnapshot(async snapshot => { //onSnapShot tells whenever our collectionRef changes or comp renders for the first time, we want to get the data of collections\r\n        //console.log(snapshot)\r\n      const collectionsMap =  convertCollectionsSnapshotToMap(snapshot)\r\n      //console.log(collectionsMap)\r\n      updateCollections(collectionsMap)\r\n     } )     \r\n  }\r\n   render () {\r\n       const {match} = this.props\r\n\r\n      return(     \r\n         <div className = \"shop-page\">\r\n            <Route exact path = {`${match.path}`} component={CollectionsOverview} />\r\n            <Route path = {`${match.path}/:categoryId`} component = {CollectionPage1}    />     \r\n         </div> )\r\n   }\r\n\r\n} \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\n export default connect(null, mapDispatchToProps) (ShopPage)\r\n"]},"metadata":{},"sourceType":"module"}