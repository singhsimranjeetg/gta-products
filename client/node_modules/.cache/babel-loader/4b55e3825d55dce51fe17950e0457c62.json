{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart; //input selector, access the cart obj from state\n\n\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\n/*\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems], \r\n    cartItems => cartItems.reduce((accumulatedQuantity, currentItemQuantity) =>\r\n    accumulatedQuantity + currentItemQuantity.quantity, 0) \r\n)*/\n\nexport const selectCartItemsTotalPrice = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedTotalPrice, currentItem) => accumulatedTotalPrice + currentItem.price * currentItem.quantity, 0));","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/redux/cart/cart.selector.js"],"names":["createSelector","selectCart","state","cart","selectCartHidden","hidden","selectCartItems","cartItems","selectCartItemsTotalPrice","reduce","accumulatedTotalPrice","currentItem","price","quantity"],"mappings":"AAEA,SAAQA,cAAR,QAA6B,UAA7B;;AAIA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CACC;;;AAED,OAAO,MAAMC,gBAAgB,GAAGJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAGA,IAAI,CAACE,MAF8B,CAAvC;AAMP,OAAO,MAAMC,eAAe,GAAGN,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACI,SAF4B,CAAtC;AAMP;;;;;;;AAOA,OAAO,MAAMC,yBAAyB,GAAGR,cAAc,CACnD,CAACM,eAAD,CADmD,EAEnDC,SAAS,IAAIA,SAAS,CAACE,MAAV,CAAiB,CAACC,qBAAD,EAAwBC,WAAxB,KAC9BD,qBAAqB,GAAIC,WAAW,CAACC,KAAZ,GAAoBD,WAAW,CAACE,QAD5C,EACuD,CADvD,CAFsC,CAAhD","sourcesContent":["\r\n\r\nimport {createSelector} from \"reselect\"\r\n\r\n\r\n\r\nconst selectCart = state => state.cart   \r\n //input selector, access the cart obj from state\r\n\r\nexport const selectCartHidden = createSelector(\r\n    [selectCart],\r\n    cart=> cart.hidden\r\n)\r\n\r\n\r\nexport const selectCartItems = createSelector(\r\n    [selectCart] ,\r\n    cart => cart.cartItems\r\n)\r\n\r\n\r\n/*\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems], \r\n    cartItems => cartItems.reduce((accumulatedQuantity, currentItemQuantity) =>\r\n    accumulatedQuantity + currentItemQuantity.quantity, 0) \r\n)*/\r\n\r\nexport const selectCartItemsTotalPrice = createSelector(\r\n    [selectCartItems], \r\n    cartItems => cartItems.reduce((accumulatedTotalPrice, currentItem) =>\r\n    accumulatedTotalPrice + (currentItem.price * currentItem.quantity), 0) \r\n)\r\n\r\n"]},"metadata":{},"sourceType":"module"}