{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport './App.css';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Checkout from \"./pages/checkout/checkoutpage/checkout.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\"; //import {auth, createUserProfileDocument} from \"./firebase/firebase.utils\"\n\nimport { connect } from \"react-redux\"; //import {setCurrentUser} from \"./redux/user/users.actions\"\n\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport ContactPage from './pages/contactPage/contactPage.component';\nimport { checkUserSession } from \"./redux/user/users.actions\"; //import {selectCollectionsForPreview } from \"./redux/shop/shop.selector\"\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  //converted app comp to hooks and use useEffect instead of componentdidcomponent.\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]); //if not passed this second array, useEffect will re render after signinsuccess bcz current user changes. \n  // doesnt work-  const {currentUser} = this.state    <h2>Welcome to {this.state.currentUser.DisplayNam}</h2>\n\n  return (\n    /*#__PURE__*/\n    //using reducer to pass the props in the header comp\n    React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \"GTA PRODUCTS \"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkout\",\n      component: Checkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/contact\",\n      component: ContactPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }\n    })))\n  );\n}; //we are passing a user obj to the setscuurent user action, dispatch is a way for redux to know whatever obj we are passing\n//will be a action obj and will be passed to all the reducers.\n//the setcurrent user is a fx and we are passsing a obj as a arguement which will be the payload for that.\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser //collectionsArray: selectCollectionsForPreview\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //first arguement is null bcz we dont need the currentuser prop here in the app comp\n//Route comp takes three attributes, exact means only that path(which exactly maches the path name), path is the url and component is name of the component\n//switch comp only lets run the base url nothing else, but when use exact it only renders the hatspage even with the switch\n//we are placing our header comp out of the swich bz, no matter what switch and route display, header comp will be there for all urls\n//the auth method of firebase keeps the user logged in untill they sign out,\n//unlike express app which required the use of sessions to do so  \n//async fx for createUser bcz its waiting for a query from the db\n//logger tells us the state of the our redux when any action gets fired\n//the prev state is the state before action was fired and second is the \n//action itself and third is the state after the action has modified \n//any of our reducers\n// const {setCurrentUser} = this.props\n\n/*this.unSubscribeFromAuth = auth.onAuthStateChanged(async UsersAuth => {     //this UserAuth objects that get passed to createuserprofile fx in the firebase utils\r\n    //console.log(UsersAuth) // this userAuth returns null if sign out and if sign in returns an auth object with display name email etc.\r\n      if(UsersAuth){\r\n     const userRef = await createUserProfileDocument(UsersAuth)//passing the user object with Uid to this fx \r\n\n      userRef.onSnapshot(snapShot => {\r\n       //console.log(snapShot.data()) this returns the collections obj(like display name) for that particualar user doc, but snapshot just rerurn the obj\r\n        setCurrentUser({\r\n          id: snapShot.id,\r\n          ...snapShot.data()\r\n          \r\n        })\r\n //console.log(setCurrentUser(UsersAuth)) this will start an action type as set current user and payload as big userAuth obj that has all the prop of signed in user\r\n     })\r\n     \r\n\n      }\r\n      \r\n        setCurrentUser(UsersAuth)  //this will set currentuser to null if there is not Userauth, means no user signed in\r\n       // addCollectionAndDocuments(\"collections\",collectionsArray.map(({title, items}) => ({title, items}) ))\r\n     \r\n   \r\n      \r\n    })*/","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/client/src/App.js"],"names":["React","useEffect","HomePage","Switch","Route","Redirect","ShopPage","Checkout","Header","SignInAndSignUpPage","connect","selectCurrentUser","createStructuredSelector","ContactPage","checkUserSession","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,kDAArB;AAEA,OAAOC,MAAP,MAAoB,sCAApB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,SAAQC,gBAAR,QAA+B,4BAA/B,C,CAEA;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAACD,EAAAA,gBAAD;AAAmBE,EAAAA;AAAnB,CAAD,KAAsC;AAEhD;AACEf,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT,CAH8C,CAKvB;AAGvB;;AACD;AAAA;AACA;AACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAG,WAAf;AAA2B,MAAA,SAAS,EAAIP,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAc,MAAA,IAAI,EAAG,GAArB;AAAyB,MAAA,SAAS,EAAIL,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGD,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,OAAd;AAAsB,MAAA,SAAS,EAAII,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHC,eAID,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,UAAd;AAAyB,MAAA,SAAS,EAAIO,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJC,eAMD,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,SAApB;AAA8B,MAAA,MAAM,EAAI,MACtCG,WAAW,gBAAI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,gBACR,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANC,CALF;AAFD;AAoBF,CA7BD,C,CA+BI;AACF;AACA;;;AACF,MAAMC,eAAe,GAAGL,wBAAwB,CAAC;AAC/CI,EAAAA,WAAW,EAAEL,iBADkC,CAEhD;;AAFgD,CAAD,CAAhD;;AAIC,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAOD,eAAeJ,OAAO,CAACO,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf,C,CAAoE;AAIpE;AACC;AACA;AACC;AACG;AACA;AAEA;AACA;AACA;AACA;AAMF;;AACF","sourcesContent":["import React, {useEffect} from 'react';\r\nimport HomePage from \"./pages/homepage/homepage.component\"\r\nimport './App.css';\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport ShopPage from \"./pages/shop/shop.component\"\r\nimport Checkout from \"./pages/checkout/checkoutpage/checkout.component\"\r\n\r\nimport Header from  \"./components/header/header.component\"\r\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\"\r\n//import {auth, createUserProfileDocument} from \"./firebase/firebase.utils\"\r\nimport {connect} from \"react-redux\"\r\n//import {setCurrentUser} from \"./redux/user/users.actions\"\r\nimport {selectCurrentUser} from \"./redux/user/user.selectors\"\r\nimport {createStructuredSelector} from \"reselect\"\r\nimport ContactPage from './pages/contactPage/contactPage.component';\r\n\r\nimport {checkUserSession} from \"./redux/user/users.actions\"\r\n\r\n//import {selectCollectionsForPreview } from \"./redux/shop/shop.selector\"\r\n\r\n\r\nconst App = ({checkUserSession, currentUser}) =>  { \r\n\r\n  //converted app comp to hooks and use useEffect instead of componentdidcomponent.\r\n    useEffect(() => {\r\n      checkUserSession()\r\n    }, [checkUserSession]) //if not passed this second array, useEffect will re render after signinsuccess bcz current user changes. \r\n\r\n\r\n    // doesnt work-  const {currentUser} = this.state    <h2>Welcome to {this.state.currentUser.DisplayNam}</h2>\r\n   return (  \r\n   //using reducer to pass the props in the header comp\r\n    <div className=\"App\">\r\n      <Header  />     \r\n    \r\n      <h4>GTA PRODUCTS </h4>\r\n    \r\n      <Switch>\r\n      <Route  path = \"/checkout\" component = {Checkout} />\r\n      <Route exact  path = \"/\" component = {HomePage}  />\r\n     <Route path = \"/shop\" component = {ShopPage} />\r\n     <Route path = \"/contact\" component = {ContactPage} />\r\n     \r\n     <Route exact path = \"/signin\" render = {() =>\r\n       currentUser ? (<Redirect to = \"/\"/>) \r\n       : (<SignInAndSignUpPage />) }/>\r\n      </Switch>\r\n      \r\n    </div>\r\n  );  \r\n}  \r\n\r\n    //we are passing a user obj to the setscuurent user action, dispatch is a way for redux to know whatever obj we are passing\r\n  //will be a action obj and will be passed to all the reducers.\r\n  //the setcurrent user is a fx and we are passsing a obj as a arguement which will be the payload for that.\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser\r\n //collectionsArray: selectCollectionsForPreview\r\n})\r\n const mapDispatchToProps = dispatch => ({\r\n   checkUserSession: () => dispatch(checkUserSession())\r\n })\r\n\r\n\r\n\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)    //first arguement is null bcz we dont need the currentuser prop here in the app comp\r\n\r\n\r\n\r\n//Route comp takes three attributes, exact means only that path(which exactly maches the path name), path is the url and component is name of the component\r\n //switch comp only lets run the base url nothing else, but when use exact it only renders the hatspage even with the switch\r\n //we are placing our header comp out of the swich bz, no matter what switch and route display, header comp will be there for all urls\r\n  //the auth method of firebase keeps the user logged in untill they sign out,\r\n     //unlike express app which required the use of sessions to do so  \r\n     //async fx for createUser bcz its waiting for a query from the db\r\n\r\n     //logger tells us the state of the our redux when any action gets fired\r\n     //the prev state is the state before action was fired and second is the \r\n     //action itself and third is the state after the action has modified \r\n     //any of our reducers\r\n\r\n\r\n\r\n   \r\n\r\n   // const {setCurrentUser} = this.props\r\n /*this.unSubscribeFromAuth = auth.onAuthStateChanged(async UsersAuth => {     //this UserAuth objects that get passed to createuserprofile fx in the firebase utils\r\n     //console.log(UsersAuth) // this userAuth returns null if sign out and if sign in returns an auth object with display name email etc.\r\n       if(UsersAuth){\r\n      const userRef = await createUserProfileDocument(UsersAuth)//passing the user object with Uid to this fx \r\n\r\n       userRef.onSnapshot(snapShot => {\r\n        //console.log(snapShot.data()) this returns the collections obj(like display name) for that particualar user doc, but snapshot just rerurn the obj\r\n         setCurrentUser({\r\n           id: snapShot.id,\r\n           ...snapShot.data()\r\n           \r\n         })\r\n  //console.log(setCurrentUser(UsersAuth)) this will start an action type as set current user and payload as big userAuth obj that has all the prop of signed in user\r\n      })\r\n      \r\n\r\n       }\r\n       \r\n         setCurrentUser(UsersAuth)  //this will set currentuser to null if there is not Userauth, means no user signed in\r\n        // addCollectionAndDocuments(\"collections\",collectionsArray.map(({title, items}) => ({title, items}) ))\r\n      \r\n    \r\n       \r\n     })*/"]},"metadata":{},"sourceType":"module"}