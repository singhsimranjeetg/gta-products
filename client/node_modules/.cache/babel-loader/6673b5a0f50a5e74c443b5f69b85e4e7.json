{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\Desktop\\\\gta-products-2\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from \"react\";\nimport \"./sign-in.styles.scss\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/users.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      //didn't get why this method defined outside the construcotr and has obj destructuring \n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      /*\r\n             try{\r\n                 await auth.signInWithEmailAndPassword(email,password)\r\n                 this.setState({email: \"\" , password: \"\"})\r\n      \r\n      \r\n             }\r\n             catch(err) {\r\n                 console.log(err)\r\n      \r\n             }  */\n    };\n\n    this.handleChange = event => {\n      /* const {googleSignInStarti} = this.props\r\n       googleSignInStarti()\r\n       */\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart,\n      emailSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: emailSignInStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      value: this.state.email,\n      type: \"email\",\n      handleChange: this.handleChange,\n      autoComplete: \"on\",\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      autoComplete: \"off\",\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"SIGN IN WITH GOOGLE\")))) //in case of cus\n    ; //used onClick mehtod to call signinwithgoogle fx from other folder\n  } //used </CustomButton> bcz wanna use the children prop of that in custom button comp.\n\n\n} //so by default isgooglesignin will pass the true value to the custom button\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: () => dispatch(emailSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/simra/Desktop/gta-products-2/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport \"./sign-in.styles.scss\"\r\nimport FormInput from \"../form-input/form-input.component\"\r\nimport CustomButton from \"../custom-button/custom-button.component\"\r\nimport {auth} from \"../../firebase/firebase.utils\"\r\n\r\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/users.actions\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n    }\r\n     handleSubmit = async event => {   //didn't get why this method defined outside the construcotr and has obj destructuring \r\n        event.preventDefault()\r\n\r\n       const {email, password} = this.state\r\n/*\r\n       try{\r\n           await auth.signInWithEmailAndPassword(email,password)\r\n           this.setState({email: \"\" , password: \"\"})\r\n\r\n\r\n       }\r\n       catch(err) {\r\n           console.log(err)\r\n\r\n       }  */\r\n        \r\n     }\r\n\r\n     handleChange = (event) => {\r\n        /* const {googleSignInStarti} = this.props\r\n         googleSignInStarti()\r\n         */\r\n         \r\n         const {value, name} = event.target\r\n         this.setState({[name]: value})\r\n     }\r\n\r\n\r\n    render(){\r\n        const {googleSignInStart, emailSignInStart} = this.props\r\n        return (\r\n            <div className = \"sign-in\">\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit = {emailSignInStart}>\r\n                    <FormInput name = \"email\"\r\n                     value ={this.state.email} \r\n                     type=\"email\" \r\n                     handleChange = {this.handleChange}\r\n                     autoComplete = \"on\"\r\n                     label = 'Email'\r\n                      required />\r\n                    \r\n\r\n\r\n                    <FormInput type=\"password\"\r\n                     name = \"password\" \r\n                     value = {this.state.password} \r\n                     autoComplete = \"off\"\r\n                     handleChange = {this.handleChange}\r\n                     label = \"Password\"\r\n                      required />\r\n    \r\n                    <div className = \"buttons\">\r\n                    <CustomButton type=\"submit\" >SIGN IN \r\n                        </CustomButton>\r\n                    <CustomButton type = \"button\" onClick = {googleSignInStart} isGoogleSignIn  >SIGN IN WITH GOOGLE\r\n                        </CustomButton>\r\n                    </div>\r\n                \r\n                </form>\r\n            </div>\r\n            //in case of cus\r\n        )//used onClick mehtod to call signinwithgoogle fx from other folder\r\n    }  //used </CustomButton> bcz wanna use the children prop of that in custom button comp.\r\n}  //so by default isgooglesignin will pass the true value to the custom button\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: () => dispatch(emailSignInStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}